{"version":3,"sources":["assets/bg.svg","styles/global.ts","components/Header/styles.ts","assets/logo.svg","components/Header/index.tsx","components/Template/styles.ts","components/Template/index.tsx","components/UsersList/styles.ts","components/UsersList/index.tsx","config/github.ts","services/api.ts","pages/Home/styles.ts","pages/Home/index.tsx","components/RepositoriesList/styles.ts","components/RepositoriesList/index.tsx","pages/User/style.ts","pages/User/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","backgroundImage","Container","styled","div","Header","location","useLocation","to","src","logoImg","alt","pathname","Template","children","UsersList","users","map","user","login","avatar_url","id","config","baseURL","api","axios","create","githubConfig","Title","h1","Form","form","props","hasError","css","shade","ResultText","Error","span","Results","Home","useState","username","setUsername","inputError","setInputError","totalResults","setTotalResults","setUsers","clearSearch","e","a","preventDefault","get","params","q","per_page","data","items","total_count","onSubmit","value","onChange","target","type","placeholder","RepositoryList","repositories","repository","href","html_url","rel","name","description","UserInfo","section","User","useParams","gitUser","setGitUser","setRepositories","useEffect","then","response","gitUserResult","reposResult","bio","public_repos","followers","following","Routes","path","element","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ebc5543.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.7fa45dda.svg\";","import { createGlobalStyle } from 'styled-components';\nimport backgroundImage from '../assets/bg.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background:#f0f0f5 url(${backgroundImage}) no-repeat 70% top;\n    color: #3a3a3a;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px sans-serif;\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  a {\n    color: #3a3a3a;\n    text-decoration: none\n  }\n\n  #root {\n    width: 100vw;\n    height: 100vh;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 20px 0;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  img {\n    width: 200px;\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    font-weight: bold;\n\n    svg {\n      margin-right: 5px;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.833302db.svg\";","import { Container } from './styles';\nimport { FaChevronLeft } from 'react-icons/fa';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction Header() {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logoImg} alt=\"Lovely GitSearch\" />\n      </Link>\n\n      {location.pathname !== '/' ? (\n        <Link to=\"/\">\n          <FaChevronLeft /> Voltar\n        </Link>\n      ) : (\n        ''\n      )}\n    </Container>\n  );\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 20px 40px;\n`;\n","import Header from '../Header';\n\nimport { Container } from './styles';\n\ntype TemplateProps = {\n  children: JSX.Element;\n};\n\nfunction Template({ children }: TemplateProps) {\n  return (\n    <Container>\n      <Header />\n      {children}\n    </Container>\n  );\n}\n\nexport default Template;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  a {\n    background: #fff;\n    padding: 24px;\n    border-radius: 5px;\n\n    transition: transform 0.2s;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    display: flex;\n    align-items: center;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    img {\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n    }\n\n    strong {\n      margin: 0 16px;\n      font-size: 20px;\n      color: #3d3d4d;\n    }\n\n    svg {\n      font-size: 64px;\n      color: #f0f0f5;\n      margin-left: auto;\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Container } from './styles';\nimport { FaChevronRight } from 'react-icons/fa';\n\nexport type User = {\n  id: number;\n  avatar_url: string;\n  login: string;\n};\n\ntype UserListProps = {\n  users: User[] | null;\n};\n\nfunction UsersList({ users }: UserListProps) {\n  return (\n    <Container>\n      {users?.map(user => {\n        return (\n          <Link key={user.id} to={`/user/${user.login}`}>\n            <img src={user.avatar_url} alt={user.login} />\n            <strong>{user.login}</strong>\n            <FaChevronRight />\n          </Link>\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default UsersList;\n","const config = {\n  baseURL: 'https://api.github.com/',\n};\n\nexport default config;\n","import axios from 'axios';\n\nimport githubConfig from '../config/github';\n\nconst api = axios.create({\n  baseURL: githubConfig.baseURL,\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ntype FormProps = {\n  hasError: boolean;\n};\n\nexport const Container = styled.div``;\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  max-width: 450px;\n  line-height: 56px;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    padding: 0 24px;\n    height: 70px;\n    border-radius: 5px 0 0 5px;\n    border: 2px solid #fff;\n    border-right: none;\n\n    ${props =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n  }\n\n  &::placeholder {\n    color: #a8a8b3;\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #113cfc;\n    border-radius: 0 5px 5px 0;\n    border: 0;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#113cfc')};\n    }\n  }\n`;\n\nexport const ResultText = styled.div`\n  color: #a8a8b3;\n  text-align: center;\n  margin-top: 40px;\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n\nexport const Results = styled.div`\n  margin-top: 40px;\n`;\n","import { FormEvent, useState } from 'react';\nimport Template from '../../components/Template';\nimport UsersList, { User } from '../../components/UsersList';\n\nimport api from '../../services/api';\n\nimport { Container, Title, Form, Error, ResultText, Results } from './styles';\n\ntype SearchUser = {\n  items: User[];\n  total_count: number;\n};\n\nfunction Home() {\n  const [username, setUsername] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [totalResults, setTotalResults] = useState<number | null>(null);\n  const [users, setUsers] = useState<User[] | null>(null);\n\n  function clearSearch() {\n    setInputError('');\n    setUsers(null);\n    setTotalResults(null);\n  }\n\n  async function handleOnSubmit(e: FormEvent<HTMLFormElement>): Promise<void> {\n    e.preventDefault();\n\n    if (!username) {\n      setInputError('Please provide an username');\n      return;\n    }\n\n    try {\n      clearSearch();\n\n      const { data } = await api.get<SearchUser>('/search/users', {\n        params: {\n          q: username,\n          per_page: 10,\n        },\n      });\n\n      setUsers(data.items);\n      setTotalResults(data.total_count);\n    } catch (error) {\n      setInputError('Repository search failed. Please try again later.');\n    }\n  }\n\n  return (\n    <Template>\n      <Container>\n        <Title>Explore GitHub Profiles</Title>\n        <Form hasError={!!inputError} onSubmit={handleOnSubmit}>\n          <input\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            type=\"text\"\n            placeholder=\"Username\"\n          />\n          <button type=\"submit\">Search</button>\n        </Form>\n\n        {inputError && <Error>{inputError}</Error>}\n\n        {totalResults ? (\n          <ResultText>\n            {totalResults} users found.\n            {totalResults > 10 && ' Showing top 10.'}\n          </ResultText>\n        ) : totalResults === null ? (\n          <ResultText>Please type something to start.</ResultText>\n        ) : (\n          <ResultText>Nobody found, try something else.</ResultText>\n        )}\n\n        <Results>\n          <UsersList users={users} />\n        </Results>\n      </Container>\n    </Template>\n  );\n}\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 40px;\n\n  h3 {\n    font-size: 32px;\n    margin-bottom: 20px;\n  }\n\n  a {\n    background: #fff;\n    padding: 24px;\n    border-radius: 5px;\n\n    transition: transform 0.2s;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    display: flex;\n    align-items: center;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    strong {\n      font-size: 20px;\n      color: #3d3d4d;\n    }\n\n    p {\n      font-size: 18px;\n      color: #a8a8b3;\n      margin-top: 4px;\n    }\n\n    svg {\n      font-size: 64px;\n      color: #f0f0f5;\n      margin-left: auto;\n    }\n  }\n`;\n","import { FaChevronRight } from 'react-icons/fa';\nimport { Container } from './styles';\n\nexport type GitRepo = {\n  id: number;\n  name: string;\n  html_url: string;\n  description: string;\n};\n\ntype RepositoryListProps = {\n  repositories: GitRepo[] | null;\n};\n\nfunction RepositoryList({ repositories }: RepositoryListProps) {\n  return (\n    <Container>\n      {repositories && (\n        <>\n          <h3>Repositories List</h3>\n          {repositories.map(repository => (\n            <a\n              key={repository.id}\n              target=\"_blank\"\n              href={repository.html_url}\n              rel=\"noreferrer\"\n            >\n              <div>\n                <strong>{repository.name}</strong>\n                <p>{repository.description}</p>\n              </div>\n              <FaChevronRight />\n            </a>\n          ))}\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default RepositoryList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 40px;\n`;\n\nexport const UserInfo = styled.section`\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 16px;\n      h2 {\n        font-size: 36px;\n\n        span {\n          color: #737380;\n          font-size: 18px;\n          font-weight: normal;\n        }\n      }\n      p {\n        font-size: 18px;\n        color: #737380;\n        margin-top: 4px;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n      strong {\n        display: block;\n        font-size: 36px;\n\n        color: #3d3d4d;\n      }\n\n      span {\n        display: block;\n        margin-top: 4px;\n        color: #6c6c80;\n      }\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RepositoryList, { GitRepo } from '../../components/RepositoriesList';\nimport Template from '../../components/Template';\nimport api from '../../services/api';\n\nimport { Container, UserInfo } from './style';\n\ntype GitUser = {\n  id: number;\n  bio: string;\n  avatar_url: string;\n  login: string;\n  name: string;\n  public_repos: number;\n  followers: number;\n  following: number;\n};\n\nfunction User() {\n  const { username } = useParams();\n\n  const [gitUser, setGitUser] = useState<GitUser | null>(null);\n  const [repositories, setRepositories] = useState<GitRepo[] | null>(null);\n\n  useEffect(() => {\n    api.get<GitUser>(`users/${username}`).then(response => {\n      const gitUserResult = response.data;\n      setGitUser(gitUserResult);\n    });\n  }, [username]);\n\n  useEffect(() => {\n    api.get<GitRepo[]>(`users/${username}/repos`).then(response => {\n      const reposResult = response.data;\n      setRepositories(reposResult);\n    });\n  }, [username]);\n\n  return (\n    <Template>\n      <Container>\n        {gitUser && (\n          <UserInfo>\n            <header>\n              <img src={gitUser.avatar_url} alt={gitUser.name} />\n              <div>\n                <h2>\n                  {gitUser.name} <span>({username})</span>\n                </h2>\n                {gitUser.bio && <p>{gitUser.bio}</p>}\n              </div>\n            </header>\n            <ul>\n              <li>\n                <strong>{gitUser.public_repos}</strong>\n                <span>Repositories</span>\n              </li>\n              <li>\n                <strong>{gitUser.followers}</strong>\n                <span>Followers</span>\n              </li>\n              <li>\n                <strong>{gitUser.following}</strong>\n                <span>Following</span>\n              </li>\n            </ul>\n          </UserInfo>\n        )}\n\n        <RepositoryList repositories={repositories} />\n      </Container>\n    </Template>\n  );\n}\n\nexport default User;\n","import { Routes as BrowserRouter, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport User from '../pages/User';\n\nfunction Routes(): JSX.Element {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/user/:username\" element={<User />} />\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","import GlobalStyles from './styles/global';\nimport Routes from './routes';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}